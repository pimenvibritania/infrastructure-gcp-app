stages:
  - build
  - deploy

# Development environment
build-dev:
  stage: build
  tags:
    - development 
  rules:
    # - if: '$CI_MERGE_REQUEST_APPROVED && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev" && $CI_COMMIT_BRANCH == "dev"'
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    - docker build -t pimenvibritania/sre-example:dev-$CI_COMMIT_SHORT_SHA -t pimenvibritania/sre-example:latest .
    - docker push pimenvibritania/sre-example:dev-$CI_COMMIT_SHORT_SHA
    - docker push pimenvibritania/sre-example:latest

deploy-dev:
  stage: deploy
  tags:
    - development
  needs:
    - build-dev
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    - export NAMESPACE_SRE=sre-application
    - echo $NAMESPACE_SRE
    - gcloud container clusters get-credentials development-cluster --zone asia-southeast2-a --project sre-development-2613
    - echo "Updating K8S Secret"
    - kubectl -n $NAMESPACE_SRE delete secret $NAMESPACE_SRE-app-secret || true
    - echo "Waiting to delete secret..."
    - sleep 5
    - kubectl -n $NAMESPACE_SRE create secret generic $NAMESPACE_SRE-app-secret --from-literal=host=$DB_HOST_DEV --from-literal=password=$DB_PASSWORD_DEV --from-literal=username=$DB_USERNAME --from-literal=database=$DB_NAME --from-literal=port=$DB_PORT 
    - kubectl -n $NAMESPACE_SRE set image deployment/$NAMESPACE_SRE-app-deployment $NAMESPACE_SRE-app=pimenvibritania/sre-example:latest
    - kubectl -n $NAMESPACE_SRE scale deployment/$NAMESPACE_SRE-app-deployment --replicas=1
    - kubectl -n $NAMESPACE_SRE rollout restart deployment/$NAMESPACE_SRE-app-deployment

migration-dev:
  stage: deploy
  tags:
    - development
  needs:
    - deploy-dev
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    - export NAMESPACE_SRE=sre-application
    - echo $NAMESPACE_SRE
    - gcloud container clusters get-credentials development-cluster --zone asia-southeast2-a --project sre-development-2613
    - kubectl -n $NAMESPACE_SRE set image cronjob/$NAMESPACE_SRE-db-migration $NAMESPACE_SRE-db-migration=pimenvibritania/sre-example:latest
    - kubectl -n $NAMESPACE_SRE delete job $NAMESPACE_SRE-db-migration || true
    - kubectl -n $NAMESPACE_SRE create job --from=cronjob.batch/$NAMESPACE_SRE-db-migration $NAMESPACE_SRE-db-migration || true
    - kubectl -n $NAMESPACE_SRE wait --for=condition=complete --timeout=120s job/$NAMESPACE_SRE-db-migration


# PRODUCTION Environment
build-prod:
  stage: build
  tags:
    - production 
  rules:
    - if: '$CI_COMMIT_TAG =~ /^PROD_.*$/'
  script:
    - docker build -t pimenvibritania/sre-example:prod-$CI_COMMIT_SHORT_SHA -t pimenvibritania/sre-example:$CI_COMMIT_TAG -t pimenvibritania/sre-example:prod-latest .
    - docker push pimenvibritania/sre-example:prod-$CI_COMMIT_SHORT_SHA
    - docker push pimenvibritania/sre-example:$CI_COMMIT_TAG
    - docker push pimenvibritania/sre-example:prod-latest

deploy-prod:
  stage: deploy
  tags:
    - production
  needs:
    - build-prod
  rules:
    - if: '$CI_COMMIT_TAG =~ /^PROD_.*$/'
  script:
    - export NAMESPACE_SRE=sre-application
    - echo $NAMESPACE_SRE
    - gcloud container clusters get-credentials production-cluster --zone asia-southeast2-a --project sre-production-2613-435513
    - echo "Updating K8S Secret"
    - kubectl -n $NAMESPACE_SRE delete secret $NAMESPACE_SRE-app-secret || true
    - echo "Waiting to delete secret..."
    - sleep 5
    - kubectl -n $NAMESPACE_SRE create secret generic $NAMESPACE_SRE-app-secret --from-literal=host=$DB_HOST_PROD --from-literal=password=$DB_PASSWORD_PROD --from-literal=username=$DB_USERNAME --from-literal=database=$DB_NAME --from-literal=port=$DB_PORT 
    - kubectl -n $NAMESPACE_SRE set image deployment/$NAMESPACE_SRE-app-deployment $NAMESPACE_SRE-app=pimenvibritania/sre-example:prod-$CI_COMMIT_SHORT_SHA
    - kubectl -n $NAMESPACE_SRE scale deployment/$NAMESPACE_SRE-app-deployment --replicas=2
    - kubectl -n $NAMESPACE_SRE rollout restart deployment/$NAMESPACE_SRE-app-deployment
  when: manual

migration-prod:
  stage: deploy
  tags:
    - production
  needs:
    - deploy-prod
  rules:
    - if: '$CI_COMMIT_TAG =~ /^PROD_.*$/'
  script:
    - export NAMESPACE_SRE=sre-application
    - echo $NAMESPACE_SRE
    - gcloud container clusters get-credentials production-cluster --zone asia-southeast2-a --project sre-production-2613-435513
    - kubectl -n $NAMESPACE_SRE set image cronjob/$NAMESPACE_SRE-db-migration $NAMESPACE_SRE-db-migration=pimenvibritania/sre-example:prod-$CI_COMMIT_SHORT_SHA
    - kubectl -n $NAMESPACE_SRE delete job $NAMESPACE_SRE-db-migration || true
    - kubectl -n $NAMESPACE_SRE create job --from=cronjob.batch/$NAMESPACE_SRE-db-migration $NAMESPACE_SRE-db-migration || true
    - kubectl -n $NAMESPACE_SRE wait --for=condition=complete --timeout=120s job/$NAMESPACE_SRE-db-migration
