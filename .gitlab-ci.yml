stages:
  - build
  - deploy
  - test

test:
  stage: test
  tags:
    - development
  script:
    - export NAMESPACE_SRE=sre-application
    - echo $NAMESPACE_SRE
    - gcloud container clusters get-credentials development-cluster --zone asia-southeast2-a --project sre-development-2613
    - docker build -t pimenvibritania/sre-example:dev-$CI_COMMIT_SHORT_SHA -t pimenvibritania/sre-example:latest .
    - docker push pimenvibritania/sre-example:dev-$CI_COMMIT_SHORT_SHA
    - docker push pimenvibritania/sre-example:latest
    - kubectl -n $NAMESPACE_SRE set image deployment/$NAMESPACE_SRE-app-deployment $NAMESPACE_SRE-app=pimenvibritania/sre-example:latest
    - kubectl -n $NAMESPACE_SRE rollout restart deployment/$NAMESPACE_SRE-app-deployment
    - echo "Updating K8S Secret"
    - kubectl -n $NAMESPACE_SRE delete secret $NAMESPACE_SRE-app-secret || true
    - echo "Waiting to delete..."
    - sleep 5
    - kubectl -n $NAMESPACE_SRE create secret generic $NAMESPACE_SRE-app-secret --from-literal=database=$DB_HOST_DEV --from-literal=host=$DB_HOST_DEV
# Development environment
build_dev:
  stage: build
  tags:
    - development 
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"'
  script:
    - echo $DB_HOST_DEV
    - $CI_COMMIT_SHORT_SHA
    # - echo "BUILDING IMAGE"
    # - docker build -t $IMAGE_NAME:latest .
    # - docker push $IMAGE_NAME:latest

deploy_dev:
  stage: deploy
  tags:
    - development
  needs:
    - build_dev
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"'
  script:
    - echo "deployed"
    # - kubectl set image deployment/dev-deployment dev-container=$IMAGE_NAME:latest --namespace=dev
    # - kubectl scale deployment dev-deployment --replicas=1 --namespace=dev
